1-
UPDATE DEBITO d
SET d.SITUACAO_DEBITO = 'Atrasado'
WHERE d.SITUACAO_DEBITO = 'Pendente' AND d.DATAVENCIMENTO < CURRENT_DATE 

2-
UPDATE DEBITO d
SET d.SITUACAO_DEBITO = 'Pendente'
WHERE d.SITUACAO_DEBITO <> 'Pago' AND d.DATAVENCIMENTO >= CURRENT_DATE

3-
UPDATE DEBITO d
SET d.DATAVENCIMENTO = DATEADD(5 YEAR TO d.DATAVENCIMENTO) 
WHERE d.SITUACAO_DEBITO = 'Negociado'

4-
SELECT p.NOME, p.EMAIL, p.TELEFONE FROM PESSOA p

5-
SELECT p.PRECO_UNITARIO FROM PRODUTO p 
WHERE p.PRECO_UNITARIO > 100

6-
SELECT * FROM VENDA v
WHERE v.VENDA_DATA = '2022-06-23'

7-
SELECT p.DATA_NASCIMENTO
,p.NOME 
,2024 - EXTRACT(YEAR FROM p.DATA_NASCIMENTO) AS IDADE
FROM PESSOA p 
WHERE p.ID_PESSOA IN (
SELECT f.ID_PESSOA 
FROM FORNECEDOR f 
WHERE f.ID_FORNECEDOR NOT IN (
SELECT p2.ID_FORNECEDOR 
FROM PRODUTO p2
)
)

8-
SELECT * FROM CLIENTE c 
WHERE c.ID_CLIENTE IN (SELECT d.ID_CLIENTE FROM DEBITOS d WHERE d.DATAVENCIMENTO < CURRENT_DATE)
AND c.ID_Cliente IN (SELECT P.ID_CLIENTE FROM PAGAMENTO p)

11-
UPDATE PRODUTO P
SET P.QUANTIDADE_ESTOQUE = QUANTIDADE_ESTOQUE*1.1
WHERE P.QUANTIDADE_ESTOQUE < 10

13-
UPDATE DEBITO D
SET D.SITUACAO_DEBITO = 'Pago'
WHERE D.SITUACAO_DEBITO = 'Atrasado' AND 
D.SITUACAO_DEBITO IN (SELECT P.ID_DEBITO FROM PAGAMENTO P)

15-
SELECT * FROM VENDA V
WHERE V.VENDA_DATA BETWEEN '2023-12-01' AND '2024-01-01'

16-
SELECT * FROM PRODUTO P
WHERE P.QUANTIDADE_ESTOQUE BETWEEN 5 AND 20

17-
SELECT * FROM PESSOA P
WHERE P.NOME LIKE 'A%'

18-
SELECT * FROM PRODUTO P
WHERE P.ID_PRODUTO NOT IN (SELECT I.ID_PRODUTO FROM ITENSVENDA I
WHERE I.ID_VENDA IN (SELECT V.ID_VENDA FROM VENDA V))

19-
SELECT * FROM PRODUTO P
RIGHT JOIN ITENSVENDA I ON I.ID_PRODUTO = P.ID_PRODUTO
RIGHT JOIN VENDA V ON V.ID_VENDA = I.ID_VENDA
WHERE V.ID_PESSOA IN (SELECT P2.ID_PESSOA FROM PESSOA P2 WHERE P2.NOME = 'Carla Souza' OR P2.NOME = 'Larissa Ferreira')

20-
SELECT * FROM PESSOA P
WHERE P.ID_PESSOA IN (SELECT C.ID_PESSOA FROM CLIENTE C) OR P.ID_PESSOA IN (SELECT F.ID_PESSOA FROM FORNECEDOR F)

22-
SELECT V.VENDA_DATA AS DATA_COMPRA
, V.VALOR_TOTAL
, P.NOME
, P.DESCRICAO
, P.PRECO_UNITARIO
FROM VENDA V
RIGHT JOIN ITENSVENDA I ON I.ID_VENDA = V.ID_VENDA 
RIGHT JOIN PRODUTO P ON P.ID_PRODUTO = I.ID_PRODUTO
WHERE P.NOME = 'Placa de Captura'

23-
SELECT P.NOME
,2025 - EXTRACT(YEAR FROM DATEADD(YEAR, 1, P.DATA_NASCIMENTO)) AS IDADE_2025
FROM PESSOA P
WHERE P.ID_PESSOA IN (SELECT F.ID_PESSOA FROM FORNECEDOR F) OR P.ID_PESSOA IN (SELECT C.ID_PESSOA FROM CLIENTE C)

25-
SELECT * FROM PRODUTO P
WHERE P.PRECO_UNITARIO > (SELECT AVG(PRODUTO.PRECO_UNITARIO) FROM PRODUTO)

26-
SELECT *
FROM PESSOA P
WHERE P.ID_PESSOA IN (SELECT E.ID_PESSOA FROM ENDERECO E
WHERE E.ID_MUNICIPIO IN (SELECT M.ID_MUNICIPIO FROM MUNICIPIO M
WHERE M.POPULACAO > 1000000))

27-
SELECT COUNT(CASE WHEN P.ID_PRODUTO IN (SELECT I.ID_PRODUTO FROM ITENSVENDA I) THEN 1 END) AS QUANTIDADE_PRODUTOS
,F.ID_FORNECEDOR
FROM FORNECEDOR F
LEFT JOIN PRODUTO P ON P.ID_FORNECEDOR = F.ID_FORNECEDOR
GROUP BY F.ID_FORNECEDOR

28-
SELECT P.NOME
,V.VALOR_TOTAL
FROM VENDA V
RIGHT JOIN PESSOA P ON P.ID_PESSOA = V.ID_PESSOA
WHERE V.VALOR_TOTAL > 500

31-
SELECT * FROM PRODUTO P
ORDER BY P.QUANTIDADE_ESTOQUE DESC

32-
SELECT * FROM VENDA V
ORDER BY V.VALOR_TOTAL ASC

33-
SELECT * FROM PRODUTO P
WHERE P.QUANTIDADE_ESTOQUE < (SELECT AVG(P.QUANTIDADE_ESTOQUE) FROM PRODUTO P)

34-
SELECT P.TELEFONE, P.NOME, P.EMAIL
FROM PESSOA P
WHERE P.TELEFONE IN (SELECT TELEFONE FROM PESSOA P
GROUP BY P.TELEFONE
HAVING COUNT(*) > 1)

36-
SELECT * FROM VENDA V
WHERE V.ID_VENDA IN (SELECT D.ID_VENDA FROM DEBITO D
WHERE D.SITUACAO_DEBITO = 'Negociado')